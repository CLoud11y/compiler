1	6	void	void
1	10	QuickSort	ID
1	26	(	(
1	4	int	int
1	10	arr	ID
1	28	[	[
1	29	]	]
1	24	,	,
1	4	int	int
1	10	low	ID
1	24	,	,
1	4	int	int
1	10	high	ID
1	27	)	)
1	30	{	{
2	2	if	if
2	26	(	(
2	10	low	ID
2	18	<	<
2	10	high	ID
2	27	)	)
2	30	{	{
3	4	int	int
3	10	i	ID
3	25	;	;
4	4	int	int
4	10	j	ID
4	25	;	;
5	4	int	int
5	10	k	ID
5	25	;	;
6	10	i	ID
6	22	=	=
6	10	low	ID
6	25	;	;
7	10	j	ID
7	22	=	=
7	10	high	ID
7	25	;	;
8	10	k	ID
8	22	=	=
8	10	arr	ID
8	28	[	[
8	10	low	ID
8	29	]	]
8	25	;	;
9	1	while	while
9	26	(	(
9	10	i	ID
9	18	<	<
9	10	j	ID
9	27	)	)
9	30	{	{
10	15	/*from right to left*/	ANNOTATION
11	1	while	while
11	26	(	(
11	10	arr	ID
11	28	[	[
11	10	j	ID
11	29	]	]
11	19	>=	>=
11	10	k	ID
11	27	)	)
11	30	{	{
12	10	j	ID
12	22	=	=
12	10	j	ID
12	13	-	-
12	11	1	NUM
12	25	;	;
13	31	}	}
15	2	if	if
15	26	(	(
15	10	i	ID
15	18	<	<
15	10	j	ID
15	27	)	)
15	30	{	{
16	10	arr	ID
16	28	[	[
16	10	i	ID
16	29	]	]
16	22	=	=
16	10	arr	ID
16	28	[	[
16	10	j	ID
16	29	]	]
16	25	;	;
17	10	i	ID
17	22	=	=
17	10	i	ID
17	12	+	+
17	11	1	NUM
17	25	;	;
18	31	}	}
19	15	/*from left to right*/	ANNOTATION
20	1	while	while
20	26	(	(
20	10	arr	ID
20	28	[	[
20	10	i	ID
20	29	]	]
20	18	<	<
20	10	k	ID
20	27	)	)
20	30	{	{
21	10	i	ID
21	22	=	=
21	10	i	ID
21	12	+	+
21	11	1	NUM
21	25	;	;
22	31	}	}
24	2	if	if
24	26	(	(
24	10	i	ID
24	18	<	<
24	10	j	ID
24	27	)	)
24	30	{	{
25	10	arr	ID
25	28	[	[
25	10	j	ID
25	29	]	]
25	22	=	=
25	10	arr	ID
25	28	[	[
25	10	i	ID
25	29	]	]
25	25	;	;
26	10	j	ID
26	22	=	=
26	10	j	ID
26	12	+	+
26	11	1	NUM
26	25	;	;
27	31	}	}
28	31	}	}
29	10	arr	ID
29	28	[	[
29	10	i	ID
29	29	]	]
29	22	=	=
29	10	k	ID
29	25	;	;
30	15	/*         test         long         annotation         */	ANNOTATION
35	10	QuickSort	ID
35	26	(	(
35	10	arr	ID
35	24	,	,
35	10	low	ID
35	24	,	,
35	10	i	ID
35	13	-	-
35	11	1	NUM
35	27	)	)
35	25	;	;
36	10	QuickSort	ID
36	26	(	(
36	10	arr	ID
36	24	,	,
36	10	i	ID
36	12	+	+
36	11	1	NUM
36	24	,	,
36	10	high	ID
36	27	)	)
36	25	;	;
37	31	}	}
38	31	}	}
